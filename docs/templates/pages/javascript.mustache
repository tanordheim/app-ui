<header class="jumbotron subhead">
  <h1>Javascript for Bootstrap</h1>
  <p class="lead">
    Bring Bootstrap's components to life - with custom <a href="http://jquery.com/">jQuery</a> plugins.
  </p>
</header>

<header class="page-header">
  <h1>jQuery plugins</h1>
</header>

<div class="grid">
  <div class="grid-3">
    <label>
      <h3><a href="./javascript.html#modals">Modals</a></h3>
      <p>A streamlined, but flexible, take on the traditional javascript modal plugin with only the minimum required functionality and smart defaults.</p>
    </label>
  </div>
  <div class="grid-3">
    <label>
      <h3><a href="./javascript.html#dropdowns">Dropdowns</a></h3>
      <p>Add dropdown menus to nearly anything in Bootstrap with this simple plugin. Bootstrap features full dropdown menu support on in the navbar, tabs, and pills.</p>
    </label>
  </div>
  <div class="grid-3">
    <label>
      <h3><a href="./javascript.html#scrollspy">Scrollspy</a></h3>
      <p>Use scrollspy to automatically update the links in your navbar to show the current active link based on scroll position.</p>
    </label>
  </div>
  <div class="grid-3">
    <label>
      <h3><a href="./javascript.html#tabs">Togglable tabs</a></h3>
      <p>Use this plugin to make tabs and pills more useful by allowing them to toggle through tabbable panes of local content.</p>
    </label>
  </div>
</div>
<div class="grid">
  <div class="grid-3">
    <label>
      <h3><a href="./javascript.html#tooltips">Tooltips</a></h3>
      <p>A new take on the jQuery Tipsy plugin, Tooltips don't rely on images—they use CSS3 for animations and data-attributes for local title storage.</p>
    </label>
  </div>
  <div class="grid-3">
    <label>
      <h3><a href="./javascript.html#popovers">Popovers</a> <small class="muted">*</small></h3>
      <p>Add small overlays of content, like those on the iPad, to any element for housing secondary information.</p>
      <p class="muted"><strong>*</strong> Requires <a href="#tooltips">Tooltips</a> to be included</p>
    </label>
  </div>
  <div class="grid-3">
    <label>
      <h3><a href="./javascript.html#alerts">Alert messages</a></h3>
      <p>The alert plugin is a tiny class for adding close functionality to alerts.</p>
    </label>
  </div>
  <div class="grid-3">
    <label>
      <h3><a href="./javascript.html#buttons">Buttons</a></h3>
      <p>Do more with buttons. Control button states or create groups of buttons for more components like toolbars.</p>
    </label>
  </div>
</div>
<div class="grid" style="margin-bottom: 9px;">
  <div class="grid-3">
    <label>
      <h3><a href="./javascript.html#collapse">Collapse</a></h3>
      <p>Get base styles and flexible support for collapsible components like accordions and navigation.</p>
    </label>
  </div>
  <div class="grid-3">
    <label>
      <h3><a href="./javascript.html#carousel">Carousel</a></h3>
      <p>Create a merry-go-round of any content you wish to provide an interactive slideshow of content.</p>
    </label>
  </div>
  <div class="grid-3">
    <label>
      <h3><a href="./javascript.html#typeahead">Typeahead</a></h3>
      <p>A basic, easily extended plugin for quickly creating elegant typeaheads with any form text input.</p>
    </label>
  </div>
  <div class="grid-3">
    <label>
      <h3>Transitions <small class="muted">*</small></h3>
      <p>For simple transition effects, include bootstrap-transition.js once to slide in modals or fade out alerts.</p>
      <p class="muted"><strong>*</strong> Required for animation in plugins</p>
    </label>
  </div>
</div>

<div class="alert alert-info"><strong>Heads up!</strong> All javascript plugins require the latest version of jQuery.</div>

<header class="page-header">
  <h1>Modals</h1>
</header>
<div class="grid">
  <div class="grid-3 columns">
    <h3>About modals</h3>
    <p>A streamlined, but flexible, take on the traditional javascript modal plugin with only the minimum required functionality and smart defaults.</p>
    <a href="../vendor/assets/javascripts/app-ui/modal.js.coffee" target="_blank" class="btn">Download file</a>
  </div>
  <div class="grid-9 columns">
    <h2>Static example</h2>
    <p>Below is a statically rendered modal.</p>
    <div class="well modal-example" style="background-color: #888; border: none;">
      <div class="modal" style="position: relative; top: auto; left: auto; margin: 0 auto; z-index: 1">
        <div class="modal-header">
          <a href="#" class="close" data-dismiss="modal">×</a>
          <h3>Modal header</h3>
        </div>
        <div class="modal-body">
          <p>One fine body…</p>
          <div class="modal-footer">
            <a href="#" class="btn btn-primary">Save changes</a>
            <a href="#" class="btn">Close</a>
          </div>
        </div>
      </div>
    </div>

    <h2>Live demo</h2>
    <p>Toggle a modal via javascript by clicking the button below. It will slide down and fade in from the top of the page.</p>
    <div id="myModal" class="hide fade">
      <h4>Text in a modal</h4>
      <p>Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem.</p>

      <h4>Popover in a modal</h4>
      <p>This <a href="#" class="btn popover-test" data-content="And here's some amazing content. It's very engaging. right?" data-original-title="A Title">button</a> should trigger a popover on hover.</p>

      <h4>Tooltips in a modal</h4>
      <p><a href="#" class="tooltip-test" data-original-title="Tooltip">This link</a> and <a href="#" class="tooltip-test" data-original-title="Tooltip">that link</a> should have tooltips on hover.</p>

      <div class="modal-footer">
        <a href="#" class="btn btn-primary">Save changes</a>
        <a href="#" class="btn" data-dismiss="modal">Close</a>
      </div>
    </div>
    <a data-toggle="modal" data-target="#myModal" data-title="Modal header" class="btn btn-primary btn-large">Launch demo modal</a>
    <br>

    <h3>Markup</h3>
    <p>You can activate modals on your page easily without having to write a single line of javascript. Just set <code>data-toggle="modal"</code> on a controller element with a <code>data-target="#foo"</code> and <code>data-title="Dialog Title"</code> which corresponds to a modal element id and the name of the dialog, and when clicked, it will launch your modal.</p>
    <p>FIXME: Add code sample.</p>
  </div>
</div>

<header class="page-header">
  <h1>Dropdowns</h1>
</header>
<div class="grid">
  <div class="grid-3 columns">
    <h3>About dropdowns</h3>
    <p>Add dropdown menus to nearly anything in Bootstrap with this simple plugin. Bootstrap features full dropdown menu support on in the navbar, tabs, and pills.</p>
    <a href="../vendor/assets/javascripts/app-ui/dropdown.js" target="_blank" class="btn">Download file</a>
  </div>
  <div class="grid-9 columns">
    <h2>Examples</h2>
    <p>Click on the dropdown nav links in the navbar and pills below to test dropdowns.</p>
    <ul class="nav nav-pills">
      <li class="active"><a href="#">Regular link</a></li>
      <li class="dropdown">
      <a class="dropdown-toggle" data-toggle="dropdown" href="#">Dropdown <b class="caret"></b></a>
      <ul id="menu1" class="dropdown-menu">
        <li><a href="#">Action</a></li>
        <li><a href="#">Another action</a></li>
        <li><a href="#">Something else here</a></li>
        <li class="divider"></li>
        <li><a href="#">Separated link</a></li>
      </ul>
      </li>
      <li class="dropdown">
      <a class="dropdown-toggle" data-toggle="dropdown" href="#">Dropdown 2 <b class="caret"></b></a>
      <ul id="menu2" class="dropdown-menu">
        <li><a href="#">Action</a></li>
        <li><a href="#">Another action</a></li>
        <li><a href="#">Something else here</a></li>
        <li class="divider"></li>
        <li><a href="#">Separated link</a></li>
      </ul>
      </li>
      <li class="dropdown">
      <a class="dropdown-toggle" data-toggle="dropdown" href="#">Dropdown 3 <b class="caret"></b></a>
      <ul id="menu3" class="dropdown-menu">
        <li><a href="#">Action</a></li>
        <li><a href="#">Another action</a></li>
        <li><a href="#">Something else here</a></li>
        <li class="divider"></li>
        <li><a href="#">Separated link</a></li>
      </ul>
      </li>
    </ul>

    <hr>

    <h2>Using dropdown.js</h2>
    <p>Call the dropdowns via javascript:</p>
    <p>FIXME: Add code sample.</p>
    <h3>Markup</h3>
    <p>To quickly add dropdown functionality to any element just add <code>data-toggle="dropdown"</code> and any valid bootstrap dropdown will automatically be activated.</p>
    <div class="alert alert-info">
      <strong>Heads up!</strong> You may optionally target a specific dropdown by using <code>data-target="#fat"</code> or <code>href="#fat"</code>.
    </div>
    <p>FIXME: Add code sample.</p>
    <h3>Methods</h3>
    <h4>$().dropdown()</h4>
    <p>A programatic api for activating menus for a given navbar or tabbed navigation.</p>
  </div>
</div>

<header class="page-header">
  <h1>Togglable tabs</h1>
</header>
<div class="grid">
  <div class="grid-3 columns">
    <p>This plugin adds quick, dynamic tab and pill functionality for transitioning through local content.</p>
    <a href="../vendor/assets/javascripts/app-ui/tab.js" target="_blank" class="btn">Download file</a>
  </div>
  <div class="grid-9 columns">
    <h2>Example tabs</h2>
    <p>Click the tabs below to toggle between hidden panes, even via dropdown menus.</p>
    <ul id="tab" class="nav nav-tabs">
      <li class="active"><a href="#home" data-toggle="tab">Home</a></li>
      <li class=""><a href="#profile" data-toggle="tab">Profile</a></li>
      <li class="dropdown">
        <a href="#" class="dropdown-toggle" data-toggle="dropdown">Dropdown <b class="caret"></b></a>
        <ul class="dropdown-menu">
          <li><a href="#dropdown1" data-toggle="tab">@fat</a></li>
          <li><a href="#dropdown2" data-toggle="tab">@mdo</a></li>
        </ul>
      </li>
    </ul>
    <div id="myTabContent" class="tab-content">
      <div class="tab-pane fade active in" id="home">
        <p>Raw denim you probably haven't heard of them jean shorts Austin. Nesciunt tofu stumptown aliqua, retro synth master cleanse. Mustache cliche tempor, williamsburg carles vegan helvetica. Reprehenderit butcher retro keffiyeh dreamcatcher synth. Cosby sweater eu banh mi, qui irure terry richardson ex squid. Aliquip placeat salvia cillum iphone. Seitan aliquip quis cardigan american apparel, butcher voluptate nisi qui.</p>
      </div>
      <div class="tab-pane fade" id="profile">
        <p>Food truck fixie locavore, accusamus mcsweeney's marfa nulla single-origin coffee squid. Exercitation +1 labore velit, blog sartorial PBR leggings next level wes anderson artisan four loko farm-to-table craft beer twee. Qui photo booth letterpress, commodo enim craft beer mlkshk aliquip jean shorts ullamco ad vinyl cillum PBR. Homo nostrud organic, assumenda labore aesthetic magna delectus mollit. Keytar helvetica VHS salvia yr, vero magna velit sapiente labore stumptown. Vegan fanny pack odio cillum wes anderson 8-bit, sustainable jean shorts beard ut DIY ethical culpa terry richardson biodiesel. Art party scenester stumptown, tumblr butcher vero sint qui sapiente accusamus tattooed echo park.</p>
      </div>
      <div class="tab-pane fade" id="dropdown1">
        <p>Etsy mixtape wayfarers, ethical wes anderson tofu before they sold out mcsweeney's organic lomo retro fanny pack lo-fi farm-to-table readymade. Messenger bag gentrify pitchfork tattooed craft beer, iphone skateboard locavore carles etsy salvia banksy hoodie helvetica. DIY synth PBR banksy irony. Leggings gentrify squid 8-bit cred pitchfork. Williamsburg banh mi whatever gluten-free, carles pitchfork biodiesel fixie etsy retro mlkshk vice blog. Scenester cred you probably haven't heard of them, vinyl craft beer blog stumptown. Pitchfork sustainable tofu synth chambray yr.</p>
      </div>
      <div class="tab-pane fade" id="dropdown2">
        <p>Trust fund seitan letterpress, keytar raw denim keffiyeh etsy art party before they sold out master cleanse gluten-free squid scenester freegan cosby sweater. Fanny pack portland seitan DIY, art party locavore wolf cliche high life echo park Austin. Cred vinyl keffiyeh DIY salvia PBR, banh mi before they sold out farm-to-table VHS viral locavore cosby sweater. Lomo wolf viral, mustache readymade thundercats keffiyeh craft beer marfa ethical. Wolf salvia freegan, sartorial keffiyeh echo park vegan.</p>
      </div>
    </div>
    <hr>
    <h2>Using bootstrap-tab.js</h2>
    <p>Enable tabbable tabs via javascript:</p>
    <pre class="prettyprint linenums"><ol class="linenums"><li class="L0"><span class="pln">$</span><span class="pun">(</span><span class="str">'#myTab'</span><span class="pun">).</span><span class="pln">tab</span><span class="pun">(</span><span class="str">'show'</span><span class="pun">)</span></li></ol></pre>
    <h3>Markup</h3>
    <p>You can activate a tab or pill navigation without writing any javascript by simply specifying <code>data-toggle="tab"</code> or <code>data-toggle="pill"</code> on an element.</p>
    <p>FIXME: Add code sample.</p>
    <h3>Methods</h3>
    <h4>$().tab</h4>
    <p>
    Activates a tab element and content container. Tab should have either a `data-target` or an `href` targeting a container node in the dom.
    </p>
    <p>FIXME: Add code sample.</p>
    <h3>Events</h3>
    <table class="table table-bordered table-striped">
      <thead>
        <tr>
          <th style="width: 150px;">Event</th>
          <th>Description</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td>show</td>
          <td>This event fires on tab show, but before the new tab has been shown. Use <code>event.target</code> and <code>event.relatedTarget</code> to target the active tab and the previous active tab (if available) respectively.</td>
        </tr>
        <tr>
          <td>shown</td>
          <td>This event fires on tab show after a tab has been shown. Use <code>event.target</code> and <code>event.relatedTarget</code> to target the active tab and the previous active tab (if available) respectively.</td>
        </tr>
      </tbody>
    </table>

    <p>FIXME: Add code sample.</p>
  </div>
</div>

<header class="page-header">
  <h1>Tooltips</h1>
</header>
<div class="grid">
  <div class="grid-3 columns">
    <h3>About Tooltips</h3>
    <p>Inspired by the excellent jQuery.tipsy plugin written by Jason Frame; Tooltips are an updated version, which don't rely on images, use css3 for animations, and data-attributes for local title storage.</p>
    <a href="../vendor/assets/javascripts/app-ui/tooltip.js" target="_blank" class="btn">Download file</a>
  </div>
  <div class="grid-9 columns">
    <h2>Example use of Tooltips</h2>
    <p>Hover over the links below to see tooltips:</p>
    <div class="tooltip-demo well">
      <p class="muted" style="margin-bottom: 0;">Tight pants next level keffiyeh <a href="#" rel="tooltip" title="first tooltip">you probably</a> haven't heard of them. Photo booth beard raw denim letterpress vegan messenger bag stumptown. Farm-to-table seitan, mcsweeney's fixie sustainable quinoa 8-bit american apparel <a href="#" rel="tooltip" title="Another tooltip">have a</a> terry richardson vinyl chambray. Beard stumptown, cardigans banh mi lomo thundercats. Tofu biodiesel williamsburg marfa, four loko mcsweeney's cleanse vegan chambray. A <a href="#" rel="tooltip" title="Another one here too">really ironic</a> artisan whatever keytar, scenester farm-to-table banksy Austin <a href="#" rel="tooltip" title="The last tip!">twitter handle</a> freegan cred raw denim single-origin coffee viral.
      </p>
    </div>
    <hr>
    <h2>Using bootstrap-tooltip.js</h2>
    <p>Trigger the tooltip via javascript:</p>
    <p>FIXME: Add code sample.</p>
    <h3>Options</h3>
    <table class="table table-bordered table-striped">
      <thead>
       <tr>
         <th style="width: 100px;">Name</th>
         <th style="width: 100px;">type</th>
         <th style="width: 50px;">default</th>
         <th>description</th>
       </tr>
      </thead>
      <tbody>
       <tr>
         <td>animation</td>
         <td>boolean</td>
         <td>true</td>
         <td>apply a css fade transition to the tooltip</td>
       </tr>
       <tr>
         <td>placement</td>
         <td>string|function</td>
         <td>'top'</td>
         <td>how to position the tooltip - top | bottom | left | right</td>
       </tr>
       <tr>
         <td>selector</td>
         <td>string</td>
         <td>false</td>
         <td>If a selector is provided, tooltip objects will be delegated to the specified targets.</td>
       </tr>
       <tr>
         <td>title</td>
         <td>string | function</td>
         <td>''</td>
         <td>default title value if `title` tag isn't present</td>
       </tr>
       <tr>
         <td>trigger</td>
         <td>string</td>
         <td>'hover'</td>
         <td>how tooltip is triggered - hover | focus | manual</td>
       </tr>
       <tr>
         <td>delay</td>
         <td>number | object</td>
         <td>0</td>
         <td>
          <p>delay showing and hiding the tooltip (ms)</p>
          <p>If a number is supplied, delay is applied to both hide/show</p>
          <p>Object structure is: <code>delay: { show: 500, hide: 100 }</code></p>
         </td>
       </tr>
      </tbody>
    </table>
    <div class="alert alert-info">
      <strong>Heads up!</strong>
      Options for individual tooltips can alternatively be specified through the use of data attributes.
    </div>
    <h3>Markup</h3>
    <p>For performance reasons, the Tooltip and Popover data-apis are opt in. If you would like to use them just specify a selector option.</p>
    <p>FIXME: Add code sample.</p>
    <h3>Methods</h3>
    <h4>$().tooltip(options)</h4>
    <p>Attaches a tooltip handler to an element collection.</p>
    <h4>.tooltip('show')</h4>
    <p>Reveals an elements tooltip.</p>
    <p>FIXME: Add code sample.</p>
    <h4>.tooltip('hide')</h4>
    <p>Hides an elements tooltip.</p>
    <p>FIXME: Add code sample.</p>
    <h4>.tooltip('toggle')</h4>
    <p>Toggles an elements tooltip.</p>
    <p>FIXME: Add code sample.</p>
  </div>
</div>

<header class="page-header">
  <h1>Popovers</h1>
</header>

<div class="grid">
  <div class="grid-3 columns">
    <h3>About popovers</h3>
    <p>Add small overlays of content, like those on the iPad, to any element for housing secondary information.</p>
    <p class="muted"><strong>*</strong> Requires <a href="#tooltips">Tooltip</a> to be included</p>
    <a href="../vendor/assets/javascripts/app-ui/popover.js" target="_blank" class="btn">Download file</a>
  </div>
  <div class="grid-9 columns">
    <h2>Example hover popover</h2>
    <p>Hover over the button to trigger the popover.</p>
    <div class="well">
      <a href="#" class="btn btn-danger" rel="popover" data-content="And here's some amazing content. It's very engaging. right?" data-original-title="A Title">hover for popover</a>
    </div>
    <hr>
    <h2>Using bootstrap-popover.js</h2>
    <p>Enable popovers via javascript:</p>
    <p>FIXME: Add code sample.</p>
    <h3>Options</h3>
    <table class="table table-bordered table-striped">
      <thead>
       <tr>
         <th style="width: 100px;">Name</th>
         <th style="width: 100px;">type</th>
         <th style="width: 50px;">default</th>
         <th>description</th>
       </tr>
      </thead>
      <tbody>
       <tr>
         <td>animation</td>
         <td>boolean</td>
         <td>true</td>
         <td>apply a css fade transition to the tooltip</td>
       </tr>
       <tr>
         <td>placement</td>
         <td>string|function</td>
         <td>'right'</td>
         <td>how to position the popover - top | bottom | left | right</td>
       </tr>
       <tr>
         <td>selector</td>
         <td>string</td>
         <td>false</td>
         <td>if a selector is provided, tooltip objects will be delegated to the specified targets</td>
       </tr>
       <tr>
         <td>trigger</td>
         <td>string</td>
         <td>'hover'</td>
         <td>how tooltip is triggered - hover | focus | manual</td>
       </tr>
       <tr>
         <td>title</td>
         <td>string | function</td>
         <td>''</td>
         <td>default title value if `title` attribute isn't present</td>
       </tr>
       <tr>
         <td>content</td>
         <td>string | function</td>
         <td>''</td>
         <td>default content value if `data-content` attribute isn't present</td>
       </tr>
       <tr>
         <td>delay</td>
         <td>number | object</td>
         <td>0</td>
         <td>
          <p>delay showing and hiding the popover (ms)</p>
          <p>If a number is supplied, delay is applied to both hide/show</p>
          <p>Object structure is: <code>delay: { show: 500, hide: 100 }</code></p>
         </td>
       </tr>
      </tbody>
    </table>
    <div class="alert alert-info">
      <strong>Heads up!</strong>
      Options for individual popovers can alternatively be specified through the use of data attributes.
    </div>
    <h3>Markup</h3>
    <p>
    For performance reasons, the Tooltip and Popover data-apis are opt in. If you would like to use them just specify a the selector option.
    </p>
    <h3>Methods</h3>
    <h4>$().popover(options)</h4>
    <p>Initializes popovers for an element collection.</p>
    <h4>.popover('show')</h4>
    <p>Reveals an elements popover.</p>
    <p>FIXME: Add code sample.</p>
    <h4>.popover('hide')</h4>
    <p>Hides an elements popover.</p>
    <p>FIXME: Add code sample.</p>
    <h4>.popover('toggle')</h4>
    <p>Toggles an elements popover.</p>
    <p>FIXME: Add code sample.</p>
  </div>
</div>

<header class="page-header">
  <h1>Alert messages</h1>
</header>
<div class="grid">
  <div class="grid-3 columns">
    <h3>About alerts</h3>
    <p>The alert plugin is a tiny class for adding close functionality to alerts.</p>
    <a href="../vendor/assets/stylesheets/app-ui/alert.js" target="_blank" class="btn">Download</a>
  </div>
  <div class="grid-9 columns">
    <h2>Example alerts</h2>
    <p>The alerts plugin works on regular alert messages, and block messages.</p>
    <div class="alert fade in">
      <a class="close" data-dismiss="alert" href="#">×</a>
      <strong>Holy guacamole!</strong> Best check yo self, you're not looking too good.
    </div>
    <div class="alert alert-block alert-error fade in">
      <a class="close" data-dismiss="alert" href="#">×</a>
      <h4 class="alert-heading">Oh snap! You got an error!</h4>
      <p>Change this and that and try again. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Cras mattis consectetur purus sit amet fermentum.</p>
      <p>
        <a class="btn btn-danger" href="#">Take this action</a> <a class="btn" href="#">Or do this</a>
      </p>
    </div>
    <hr>
    <h2>Using bootstrap-alert.js</h2>
    <p>Enable dismissal of an alert via javascript:</p>
    <p>FIXME: Add code sample.</p>
    <h3>Markup</h3>
    <p>Just add <code>data-dismiss="alert"</code> to your close button to automatically give an alert close functionality.</p>
    <p>FIXME: Add code sample.</p>
    <h3>Methods</h3>
    <h4>$().alert()</h4>
    <p>Wraps all alerts with close functionality. To have your alerts animate out when closed, make sure they have the <code>.fade</code> and <code>.in</code> class already applied to them.</p>
    <h4>.alert('close')</h4>
    <p>Closes an alert.</p>
    <p>FIXME: Add code sample.</p>
    <h3>Events</h3>
    <p>Bootstrap's alert class exposes a few events for hooking into alert functionality.</p>
    <table class="table table-bordered table-striped">
      <thead>
       <tr>
         <th style="width: 150px;">Event</th>
         <th>Description</th>
       </tr>
      </thead>
      <tbody>
       <tr>
         <td>close</td>
         <td>This event fires immediately when the <code>close</code> instance method is called.</td>
       </tr>
       <tr>
         <td>closed</td>
         <td>This event is fired when the alert has been closed (will wait for css transitions to complete).</td>
       </tr>
      </tbody>
    </table>
    <p>FIXME: Add code sample.</p>
  </div>
</div>

<header class="page-header">
  <h1>Buttons</h1>
</header>
<div class="grid">
  <div class="grid-3 columns">
    <h3>About</h3>
    <p>Do more with buttons. Control button states or create groups of buttons for more components like toolbars.</p>
    <a href="../vendor/assets/javascripts/app-ui/button.js" target="_blank" class="btn">Download file</a>
  </div>
  <div class="grid-9 columns">
    <h2>Example uses</h2>
    <p>Use the buttons plugin for states and toggles.</p>
    <table class="table table-bordered table-striped">
      <tbody>
       <tr>
         <td>Stateful</td>
         <td>
            <button id="fat-btn" data-loading-text="loading..." class="btn btn-primary">
              Loading State
            </button>
          </td>
       </tr>
       <tr>
         <td>Single toggle</td>
         <td>
            <button class="btn btn-primary" data-toggle="button">Single Toggle</button>
          </td>
       </tr>
       <tr>
         <td>Checkbox</td>
         <td>
            <div class="btn-group" data-toggle="buttons-checkbox">
              <button class="btn btn-primary">Left</button>
              <button class="btn btn-primary">Middle</button>
              <button class="btn btn-primary">Right</button>
            </div>
         </td>
       </tr>
       <tr>
         <td>Radio</td>
         <td>
            <div class="btn-group" data-toggle="buttons-radio">
              <button class="btn btn-primary">Left</button>
              <button class="btn btn-primary">Middle</button>
              <button class="btn btn-primary">Right</button>
            </div>
         </td>
       </tr>
      </tbody>
    </table>
    <hr>
    <h2>Using bootstrap-button.js</h2>
    <p>Enable buttons via javascript:</p>
    <p>FIXME: Add code sample.</p>
      <h3>Markup</h3>
    <p>Data attributes are integral to the button plugin. Check out the example code below for the various markup types.</p>
    <p>FIXME: Add code sample.</p>
    <h3>Methods</h3>
    <h4>$().button('toggle')</h4>
    <p>Toggles push state. Gives btn the look that it hass been activated.</p>
    <div class="alert alert-info">
      <strong>Heads up!</strong>
      You can enable auto toggling of a button by using the <code>data-toggle</code> attribute.
    </div>
    <p>FIXME: Add code sample.</p>
    <h4>$().button('loading')</h4>
    <p>Sets button state to loading - disables button and swaps text to loading text. Loading text should be defined on the button element using the data attribute <code>data-loading-text</code>.
    </p>
    <p>FIXME: Add code sample.</p>
    <div class="alert alert-info">
      <strong>Heads up!</strong>
      <a href="https://github.com/twitter/bootstrap/issues/793">Firefox persists the disabled state across page loads</a>. A workaround for this is to use <code>autocomplete="off"</code>.
    </div>
    <h4>$().button('reset')</h4>
    <p>Resets button state - swaps text to original text.</p>
    <h4>$().button(string)</h4>
    <p>Resets button state - swaps text to any data defined text state.</p>
    <p>FIXME: Add code sample.</p>
  </div>
</div>

<header class="page-header">
  <h1>Collapse</h1>
</header>

<div class="grid">
  <div class="grid-3 columns">
    <h3>About</h3>
    <p>Get base styles and flexible support for collapsible components like accordions and navigation.</p>
    <a href="../vendor/assets/stylesheets/app-ui/collapse.js" target="_blank" class="btn">Download file</a>
  </div>
  <div class="grid-9 columns">
    <h2>Example accordion</h2>
    <p>Using the collapse plugin, we built a simple accordion style widget:</p>

    <div class="accordion" id="accordion2">
      <div class="accordion-group">
        <div class="accordion-heading">
          <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion2" href="#collapseOne">
            Collapsible Group Item #1
          </a>
        </div>
        <div id="collapseOne" class="accordion-body collapse in">
          <div class="accordion-inner">
            Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven't heard of them accusamus labore sustainable VHS.
          </div>
        </div>
      </div>
      <div class="accordion-group">
        <div class="accordion-heading">
          <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion2" href="#collapseTwo">
            Collapsible Group Item #2
          </a>
        </div>
        <div id="collapseTwo" class="accordion-body collapse">
          <div class="accordion-inner">
            Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven't heard of them accusamus labore sustainable VHS.
          </div>
        </div>
      </div>
      <div class="accordion-group">
        <div class="accordion-heading">
          <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion2" href="#collapseThree">
            Collapsible Group Item #3
          </a>
        </div>
        <div id="collapseThree" class="accordion-body collapse">
          <div class="accordion-inner">
            Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven't heard of them accusamus labore sustainable VHS.
          </div>
        </div>
      </div>
    </div>


    <hr>
    <h2>Using bootstrap-collapse.js</h2>
    <p>Enable via javascript:</p>
    <p>FIXME: Add code sample.</p>
    <h3>Options</h3>
    <table class="table table-bordered table-striped">
      <thead>
       <tr>
         <th style="width: 100px;">Name</th>
         <th style="width: 50px;">type</th>
         <th style="width: 50px;">default</th>
         <th>description</th>
       </tr>
      </thead>
      <tbody>
       <tr>
         <td>parent</td>
         <td>selector</td>
         <td>false</td>
         <td>If selector then all collapsible elements under the specified parent will be closed when this collapsible item is shown. (similar to traditional accordion behavior)</td>
       </tr>
       <tr>
         <td>toggle</td>
         <td>boolean</td>
         <td>true</td>
         <td>Toggles the collapsible element on invocation</td>
       </tr>
      </tbody>
    </table>
    <h3>Markup</h3>
    <p>Just add <code>data-toggle="collapse"</code> and a <code>data-target</code> to element to automatically assign control of a collapsible element. The <code>data-target</code> attribute accepts a css selector to apply the collapse to. Be sure to add the class <code>collapse</code> to the collapsible element. If you'd like it to default open, add the additional class <code>in</code>.</p>
    <p>FIXME: Add code sample.</p>
    <div class="alert alert-info">
      <strong>Heads up!</strong>
      To add accordion-like group management to a collapsible control, add the data attribute <code>data-parent="#selector"</code>. Refer to the demo to see this in action.
    </div>
    <h3>Methods</h3>
    <h4>.collapse(options)</h4>
    <p>Activates your content as a collapsible element. Accepts an optional options <code>object</code>.</p>
    <p>FIXME: Add code sample.</p>
    <h4>.collapse('toggle')</h4>
    <p>Toggles a collapsible element to shown or hidden.</p>
    <h4>.collapse('show')</h4>
    <p>Shows a collapsible element.</p>
    <h4>.collapse('hide')</h4>
    <p>Hides a collapsible element.</p>
    <h3>Events</h3>
    <p>
      Bootstrap's collapse class exposes a few events for hooking into collapse functionality.
    </p>
    <table class="table table-bordered table-striped">
      <thead>
       <tr>
         <th style="width: 150px;">Event</th>
         <th>Description</th>
       </tr>
      </thead>
      <tbody>
       <tr>
         <td>show</td>
         <td>This event fires immediately when the <code>show</code> instance method is called.</td>
       </tr>
       <tr>
         <td>shown</td>
         <td>This event is fired when a collapse element has been made visible to the user (will wait for css transitions to complete).</td>
       </tr>
       <tr>
         <td>hide</td>
         <td>
          This event is fired immediately when the <code>hide</code> method has been called.
         </td>
       </tr>
       <tr>
         <td>hidden</td>
         <td>This event is fired when a collapse element has been hidden from the user (will wait for css transitions to complete).</td>
       </tr>
      </tbody>
    </table>
    <p>FIXME: Add code sample.</p>
  </div>
</div>

<header class="page-header">
  <h1>Typeahead</h1>
</header>
<div class="grid">
  <div class="grid-3 columns">
    <h3>About</h3>
    <p>A basic, easily extended plugin for quickly creating elegant typeaheads with any form text input.</p>
    <a href="../vendor/assets/javascripts/app-ui/typeahead.js" target="_blank" class="btn">Download file</a>
  </div>
  <div class="grid-9 columns">
    <h2>Example</h2>
    <p>Start typing in the field below to show the typeahead results.</p>
    <div class="well">
      <input type="text" class="span3" style="margin: 0 auto;" data-provide="typeahead" data-items="4" data-source="[&quot;Alabama&quot;,&quot;Alaska&quot;,&quot;Arizona&quot;,&quot;Arkansas&quot;,&quot;California&quot;,&quot;Colorado&quot;,&quot;Connecticut&quot;,&quot;Delaware&quot;,&quot;Florida&quot;,&quot;Georgia&quot;,&quot;Hawaii&quot;,&quot;Idaho&quot;,&quot;Illinois&quot;,&quot;Indiana&quot;,&quot;Iowa&quot;,&quot;Kansas&quot;,&quot;Kentucky&quot;,&quot;Louisiana&quot;,&quot;Maine&quot;,&quot;Maryland&quot;,&quot;Massachusetts&quot;,&quot;Michigan&quot;,&quot;Minnesota&quot;,&quot;Mississippi&quot;,&quot;Missouri&quot;,&quot;Montana&quot;,&quot;Nebraska&quot;,&quot;Nevada&quot;,&quot;New Hampshire&quot;,&quot;New Jersey&quot;,&quot;New Mexico&quot;,&quot;New York&quot;,&quot;North Dakota&quot;,&quot;North Carolina&quot;,&quot;Ohio&quot;,&quot;Oklahoma&quot;,&quot;Oregon&quot;,&quot;Pennsylvania&quot;,&quot;Rhode Island&quot;,&quot;South Carolina&quot;,&quot;South Dakota&quot;,&quot;Tennessee&quot;,&quot;Texas&quot;,&quot;Utah&quot;,&quot;Vermont&quot;,&quot;Virginia&quot;,&quot;Washington&quot;,&quot;West Virginia&quot;,&quot;Wisconsin&quot;,&quot;Wyoming&quot;]">
    </div>
    <hr>
    <h2>Using bootstrap-typeahead.js</h2>
    <p>Call the typeahead via javascript:</p>
    <p>FIXME: Add code sample.</p>
    <h3>Options</h3>
    <table class="table table-bordered table-striped">
      <thead>
       <tr>
         <th style="width: 100px;">Name</th>
         <th style="width: 50px;">type</th>
         <th style="width: 100px;">default</th>
         <th>description</th>
       </tr>
      </thead>
      <tbody>
        <tr>
         <td>source</td>
         <td>array</td>
         <td>[ ]</td>
         <td>The data source to query against.</td>
       </tr>
       <tr>
         <td>items</td>
         <td>number</td>
         <td>8</td>
         <td>The max number of items to display in the dropdown.</td>
       </tr>
       <tr>
         <td>matcher</td>
         <td>function</td>
         <td>case insensitive</td>
         <td>The method used to determine if a query matches an item. Accepts a single argument, the <code>item</code> against which to test the query. Access the current query with <code>this.query</code>. Return a boolean <code>true</code> if query is a match.</td>
       </tr>
       <tr>
         <td>sorter</td>
         <td>function</td>
         <td>exact match,<br> case sensitive,<br> case insensitive</td>
         <td>Method used to sort autocomplete results. Accepts a single argument <code>items</code> and has the scope of the typeahead instance. Reference the current query with <code>this.query</code>.</td>
       </tr>
       <tr>
         <td>highlighter</td>
         <td>function</td>
         <td>highlights all default matches</td>
         <td>Method used to highlight autocomplete results. Accepts a single argument <code>item</code> and has the scope of the typeahead instance. Should return html.</td>
       </tr>
      </tbody>
    </table>

    <h3>Markup</h3>
    <p>Add data attributes to register an element with typeahead functionality.</p>
    <p>FIXME: Add code sample.</p>
    <h3>Methods</h3>
    <h4>.typeahead(options)</h4>
    <p>Initializes an input with a typeahead.</p>
  </div>
</div>
