/*
 * elements/forms.less
 *
 * Styles forms and form elements.
 */

form {
  margin-bottom: @baseline;
}

fieldset {
  margin-bottom: @baseline;
  padding-top: @baseline / 2;
  
  legend {
    display: block;
    font-size: @basefont * 1.5;
    line-height: 1;
    color: #404040;
    *line-height: 1.5; /* IE6-7 */
  }
}

form .input {
  margin-bottom: @baseline / 2;
  #hacks > .clearfix();

  .error {
    padding-left: 5px;
    *position: relative; /* IE6-7 */
    *top: -5px; /* IE6-7 */
  }

  .hint {
    display: block;
    color: #bfbfbf;
    line-height: @baseline;
    font-size: @basefont;
    margin-top: 3px;
  }
}

label, input, select, textarea, button {
  #font-stacks > .sans-serif(normal, @basefont, normal);
}

label {
  display: block;
  padding-top: 6px;
  font-size: @basefont;
  line-height: 20px;
  font-weight: bold;
}

input[type="checkbox"], input[type="radio"] {
  cursor: pointer;
}

input, textarea, select {
  display: inline-block;
  width: 210px;
  height: @baseline;
  padding: 4px;
  font-size: @basefont;
  line-height: @baseline;
  color: #808080;
  border: 1px solid #ccc;
  #border-radius > .border-radius(3px);
}

// Remove padding from select.
select {
  padding: initial;
}

// Mini reset for non-html file types.
input[type="checkbox"], input[type="radio"] {
  width: auto;
  height: auto;
  padding: 0;
  margin: 3px 0;
  *margin-top: 0; /* IE6-7 */
  line-height: normal;
  border: none;
}

input[type="file"] {
  background-color: #fff;
  padding: initial;
  border: initial;
  line-height: initial;
  #shadows > .box-shadow(none);
}

input[type="button"], input[type="reset"], input[type="submit"], .button {
  width: auto;
  height: auto;
}

select, input[type="file"] {
  height: @baseline * 1.5; // In IE7, the height of the select element cannot be changed by height, only font-size.
  *height: auto; // Reset for IE7.
  line-height: @baseline * 1.5;
  *margin-top: 4px; /* For IE7, add top margin to align select with labels */
}

// Make multiple select elements height not fixed.
select[multiple] {
  height: inherit;
  background-color: #fff; // Fixes Chromium bug of unreadable items.
}

textarea {
  height: auto;
}

// Placeholder text styles.
:-moz-placeholder {
  color: #bfbfbf
}
::webkit-input-placeholder {
  color: #bfbfbf
}

// Focus states.
input, textarea {
  @transition: border linear .2s, box-shadow linear .2s;
  #animations > .transition(@transition);
  #shadows > .box-shadow(0 1px 3px rgba(0, 0, 0, 0.1) inset);
}
input:focus, textarea:focus {
  outline: 0;
  border-color: rgba(82, 168, 236, 0.8);
  @shadow: 0 1px 3px rgba(0, 0, 0, 0.1), 0 0 8px rgba(82, 168, 236, 0.6);
  #shadows > .box-shadow(@shadow);
}
input[type="file"]:focus, input[type="checkbox"]:focus, select:focus {
  #shadows > .box-shadow(none);
  outline: 1px dotted #666; // Select elements doesnt get box-shadow, so do an outline instead.
}

// Disabled and read only inputs.
input[disabled], select[disabled], textarea[disabled], input[readonly], select[readonly], textarea[readonly] {
  background-color: #f5f5f5;
  border-color: #ddd;
  cursor: not-allowed;
}

/*
 * Form field feedback states.
 */
.form-field-state(@textColor: #555, @borderColor: #ccc, @backgroundColor: #f5f5f5) {

  // Set the text color.
  > label, .error {
    color: @textColor;
  }

  // Style inputs accordingly.
  input, textarea {
    color: @textColor;
    border-color: @borderColor;

    &:focus {
      border-color: darken(@borderColor, 10%);
      #shadows > .box-shadow(0 0 6px lighten(@borderColor, 20%));
    }
  }
}

// Field errors.
form .input.field_with_errors {
  .form-field-state(#b94a48, #ee5f5b, lighten(#ee5f5b, 30%));
}

// Check box and radio collections.
form .input.check_boxes, form .input.radio {
  margin: 0 0 5px;
  width: 100%;

  > span:not(.hint) {
    margin-left: 20px;
    line-height: @baseline / 2;
    display: block;

    label {
      margin-left: 5px;
      line-height: @baseline - 2;
      white-space: normal;
      display: inline-block;
      font-weight: normal;
    }

    &:first-child {
      padding-top: 6px;
    }
  }

  input[type="checkbox"], input[type="radio"] {
    margin-bottom: 0;
    margin-top: 8px;
    margin-left: -20px;
    float: left;
  }
}
form .input.boolean {
  label {
    margin-left: 5px;
    line-height: @baseline - 2;
    white-space: normal;
    display: inline-block;
    font-weight: normal;
  }

  input[type="checkbox"] {
    margin-bottom: 0;
    margin-top: 8px;
    margin-left: 0;
    float: left;
  }
}

/*
 * Actions/buttons.
 */

.actions {
  background: #f5f5f5;
  margin-top: @baseline;
  margin-bottom: @baseline;
  margin-left: -20px;
  padding: (@baseline - 1) 20px @baseline 20px;
  border-top: 1px solid #ddd;
  #border-radius > .border-bottom-radius(3px);
}

button, input[type="button"], input[type="submit"], input[type="reset"], a.button {
  cursor: pointer;
  display: inline-block;
  #gradients > .vertical-three-colors(#ffffff, #ffffff, 25%, darken(#ffffff, 10%));
  padding: 5px 14px 6px;
  text-shadow: 0 1px 1px rgba(255, 255, 255, 0.75);
  color: #333;
  font-size: @basefont;
  line-height: normal;
  border: 1px solid #ccc;
  border-bottom-color: #bbb;
  #border-radius > .border-radius(4px);
  @shadow: inset 0 1px 0 rgba(255, 255, 255, 0.2), 0 1px 2px rgba(0, 0, 0, 0.05);
  #shadows > .box-shadow(@shadow);

  &:hover {
    background-position: 0 -15px;
    color: #333;
    text-decoration: none;
  }

  &:focus {
    outline: 1px dotted #666;
  }

  // Primary buttons.
  &[type="submit"], &.primary {
    color: #fff;
    #gradients > .gradient-bar(#049cdb, #0064cd);
  }

  // Dangerous buttons.
  &.danger {
    color: #fff;
    #gradients > .gradient-bar(#ee5f5b, #c43c35);
  }

  // Button containing an icon.
  &.has-icon {
    padding-left: 28px;
    position: relative;

    .ui-icon {
      position: absolute;
      top: 4px;
      left: 5px;
    }

    &.primary .ui-icon {
      background-image: url(jquery-ui-images/ui-icons_ededed_256x240.png);
    }
  }
}
